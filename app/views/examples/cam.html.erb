<div class="photobooth">
  <div class="controls">
    <button onClick="takePhoto()">Take Photo</button>
<!--       <div class="rgb">
      <label for="rmin">Red Min:</label>
      <input type="range" min=0 max=255 name="rmin">
      <label for="rmax">Red Max:</label>
      <input type="range" min=0 max=255 name="rmax">
      <br>
      <label for="gmin">Green Min:</label>
      <input type="range" min=0 max=255 name="gmin">
      <label for="gmax">Green Max:</label>
      <input type="range" min=0 max=255 name="gmax">
      <br>
      <label for="bmin">Blue Min:</label>
      <input type="range" min=0 max=255 name="bmin">
      <label for="bmax">Blue Max:</label>
      <input type="range" min=0 max=255 name="bmax">
    </div> -->
  </div>

  <canvas class="photo"></canvas>
  <video class="player"></video>
  <div class="strip"></div>
</div>

<audio class="snap" src="http://wesbos.com/demos/photobooth/snap.mp3" hidden></audio>

<script type="text/javascript">
  const video = document.querySelector('.player');
  const canvas = document.querySelector('.photo');
  const ctx = document.querySelector('.2d');
  const strip = document.querySelector('.strip');
  const snap = document.querySelector('.snap');

  function getVideo() {
    navigator.mediaDevices.getUserMedia({ video: true, audio: false })
      .then(localMediaStream => {
        video.src = window.URL.createObjectURL(localMediaStream);
        video.play();
      })
      .catch(err => {
        console.error(`Oh no!`, err);
      })
  }

  function paintToCanvas() {
    const width = video.videoWidth;
    const height = video.videoHeight;
    canvas.width = width;
    canvas.height = height;

    return setInterval(() => {
      ctx.drawImage(video, 0, 0, width, height);
      // take pixels out
      let pixels = ctx.getImageData(0, 0, width, height);
      // alter them
      pixels = redEffect(pixels);
      // put them back
      ctx.putImageData(pixels, 0, 0);
    }, 16);
  }

  function takePhoto() {
    // played the sound
    snap.currentTime = 0;
    snap.play();

    // take the data out of the canvas
    const data = canvas.toDataURL('image/jpeg');
    const link = document.createElement('a');
    link.href = data;
    link.setAttribute('download', 'handsome');
    link.textContent = `<img src="${data}" alt="Handsome" />`;
    strip.insertBefore(link, strip.firstChild);
  }

  function redEffect(pixels) {
    for(let i = 0; i < pixels.length; i+=4) {
      pixels.data[i + 0] = pixels.data[i + 0] + 100;
      pixels.data[i + 1] = pixels.data[i + 1] - 50;
      pixels.data[i + 2] = pixels.data[i + 2] * 0.5;
    }
    return pixels;
  }

  getVideo();

  video.addEventListener('canplay', paintToCanvas);


</script>